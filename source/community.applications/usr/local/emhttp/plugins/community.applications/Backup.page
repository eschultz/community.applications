Menu="CA"
Title="Backup Appdata"
Icon="backup.png"
---
<?
###############################################################
#                                                             #
# Community Applications copyright 2015-2016, Andrew Zawadzki #
#                                                             #
###############################################################

$plugin = "community.applications";

$backupOptions = json_decode(@file_get_contents("/boot/config/plugins/community.applications/BackupOptions.json"),true);
if ( ! $backupOptions['rsyncOption'] ) {
  $backupOptions['rsyncOption'] = "-avXHq --delete";
}

if ( ! $backupOptions['cronSetting'] ) {
  $backupOptions['cronSetting'] = "disabled";
}

if ( ! $backupOptions['cronDay'] ) {
  $backupOptions['cronDay'] = 1;
}

if ( ! $backupOptions['cronMonth'] ) {
  $backupOptions['cronMonth'] = 2;
}

if ( ! $backupOptions['cronHour'] ) {
  $backupOptions['cronHour'] = 3;
}

if ( ! $backupOptions['cronMinute'] ) {
  $backupOptions['cronMinute'] = 0;
}

$destinationShareList = array_diff(scandir("/mnt/user"),array(".",".."));
$udList = array_diff(scandir("/mnt/disks"),array(".",".."));
$sharesList = array_diff(scandir("/mnt/cache"),array(".",".."));
$disksList = array_diff(scandir("/mnt/"),array(".","..","user","user0","disks","cache"));
natsort($disksList);

$sourceShares = "<option value=''>Select A Share</option>";
foreach ($sharesList as $addShare) {
  $selected = "";
  if ( ! is_dir("/mnt/cache/$addShare") ) {
    continue;
  }
  if ( $backupOptions['source'] == "/mnt/cache/$addShare" ) {
    $selected = "selected";
  }    
  $sourceShares .= "<option value='/mnt/cache/$addShare' $selected>$addShare</option>";
}
foreach ($udList as $udShare) {
  $selected = "";
  if ( ! is_dir("/mnt/disks/$udShare") ) {
    continue;
  }
  if ( $backupOptions['source'] == "/mnt/disks/$udShare" ) {
    $selected = "selected";
  }
  $sourceShares .= "<option value='/mnt/disks/$udShare' $selected>$udShare (via Unassigned Devices)</option>";
}

$destinationShares = "<option value=''>Select A Disk</option>";
foreach ($disksList as $addShare) {
  $selected = "";
  if ( ! is_dir("/mnt/$addShare") ) {
    continue;
  }
  if ( $backupOptions['destination'] == "/mnt/$addShare" ) {
    $selected = "selected";
  }
  $destinationShares .= "<option value='/mnt/$addShare' $selected>$addShare</option>";
}
foreach ($udList as $udShare) {
  $selected = "";
  if ( ! is_dir("/mnt/disks/$udShare") ) {
    continue;
  }
  if ( $backupOptions['destination'] == "/mnt/disks/$udShare" ) {
    $selected = "selected";
  }
  $destinationShares .= "<option value='/mnt/disks/$udShare' $selected>$udShare (via Unassigned Devices)</option>";
}

$destinationUserList = "<option value=''>Select A Share</option>";
foreach ($destinationShareList as $destinationList) {
  if ( is_dir("/mnt/user/$destinationList") ) {
    $selected = "";
    if ( $backupOptions['destinationShare'] == $destinationList ) {
      $selected = "selected";
    }
    $destinationUserList .= "<option value='$destinationList' $selected>$destinationList</option>";
  }
}

for ( $minute = 0; $minute < 60; $minute++ ) {
  $cronMinute .= "<option value='$minute'>$minute</option>";
}

for ( $hour = 0; $hour < 24; $hour++ ) {
  if ( $hour > 11 ) { $suffix = "PM"; $easyHour = $hour - 12; } else { $suffix = "AM"; $easyHour = $hour; }
  if ( $easyHour == 0 ) { $easyHour = 12; }

  $cronHour .= "<option value='$hour'>$easyHour$suffix</option>";
}

?>

<script>
var URL = "/plugins/<?=$plugin?>/include/exec.php";
var appliedChanges = false;

$(function() {
  myAlert("Appdata Backup","When a Backup is running (<em>either manually or a scheduled backup</em>), your docker applications will be <b>stopped</b> and then <b>restarted</b> at the conclusion of the backup","","",false,"",true,"warning");
  
  setInterval(function() {
    checkBackup();
  }, 1000);

  $("#cronSetting").val("<?=$backupOptions['cronSetting']?>");
  $("#cronDay").val("<?=$backupOptions['cronDay']?>");
  $("#cronMonth").val("<?=$backupOptions['cronMonth']?>");
  $("#cronHour").val("<?=$backupOptions['cronHour']?>");
  $("#cronMinute").val("<?=$backupOptions['cronMinute']?>");
  $("#cronCustom").val("<?=$backupOptions['cronCustom']?>");

  validateOptions(true);
});

function myAlert(description,textdescription,textimage,imagesize, outsideClick, showCancel, showConfirm, alertType) {
  if ( !outsideClick ) outsideClick = false;
  if ( !showCancel )   showCancel = false;
  if ( !showConfirm )  showConfirm = false;
  if ( imagesize == "" ) { imagesize = "80x80"; }
   
  swal({
    title: description,
    text: textdescription,
    imageUrl: textimage,
    imageSize: imagesize,
    allowOutsideClick: outsideClick,
    showConfirmButton: showConfirm,
    showCancelButton: showCancel,
    type: alertType,
    html: true
  });
}
function validateOptions(initialization) {
  if (initialization != true ) {
    appliedChanges = true;
  }

  var cronSetting = $("#cronSetting").val();
  switch (cronSetting) {
    case 'daily':
      $("#cronDay,#cronMonth,#cronCustom").prop("disabled",true);
      $("#cronHour,#cronMinute").prop("disabled",false);
      break;
    case 'weekly':
      $("#cronMonth,#cronCustom").prop("disabled",true);
      $("#cronDay,#cronHour,#cronMinute").prop("disabled",false);
      break;
    case 'monthly':
      $("#cronCustom,#cronDay").prop("disabled",true);
      $("#cronMonth,#cronHour,#cronMinute").prop("disabled",false);
      break;
    case 'custom':
      $("#cronCustom").prop("disabled",false);
      $("#cronDay,#cronMonth,#cronHour,#cronMinute").prop("disabled",true);
      break;
    case 'disabled':
      $("#cronCusom,#cronDay,#cronMonth,#cronHour,#cronMinute").prop("disabled",true);
      break;
  }
  
  var source = $("#source").val();
  var destination = $("#destination").val();
  var destinationShare = $("#destinationShare").val();
  var stopScript = $("#stopScript").val();
  var startScript = $("#startScript").val();
  stopScript = stopScript.trim();
  startScript = startScript.trim();
  
  $.post(URL,{action:'validateBackupOptions',source:source,destinationShare:destinationShare,destination:destination,stopScript:stopScript,startScript:startScript}, function (data) {
    if (data) {
      data = data.trim();
      if ( data == "NONE" ) {
        if ( appliedChanges ) {
          $("#Apply").prop("disabled",false);
          $("#Backup").prop("disabled",true);
        } else {
          $("#errors").html("false");
          $("#Apply").prop("disabled",true);
          $("#Backup").prop("disabled",false);
        }          
        $("#errors").html("");
      } else {
        $("#errors").html(data);
        $("#Apply,#Backup").prop("disabled",true);
      }
    }
  });
}  
  
function apply() {
  appliedChanges = false;
  
  var source = $("#source").val();
  var destinationShare = $("#destinationShare").val();
  var destination = $("#destination").val();
  var stopScript = $("#stopScript").val();
  var startScript = $("#startScript").val();
  var rsyncOption = $("#rsyncOption").val();
  var cronSetting = $("#cronSetting").val();
  var cronDay = $("#cronDay").val();
  var cronMonth = $("#cronMonth").val();
  var cronHour = $("#cronHour").val();
  var cronMinute = $("#cronMinute").val();
  var cronCustom = $("#cronCustom").val();
  var runRsync = $("#runRsync").val();
  
  rsyncOption = rsyncOption.trim();
  stopScript = stopScript.trim();
  startScript = startScript.trim();
  
  $.post(URL,{action:'applyBackupOptions',source:source,destinationShare:destinationShare,destination:destination,stopScript:stopScript,startScript:startScript,rsyncOption:rsyncOption,cronDay:cronDay,cronMonth:cronMonth,cronHour:cronHour,cronMinute:cronMinute,cronCustom:cronCustom,cronSetting:cronSetting,runRsync:runRsync});
  
  validateOptions(true);
}  

function checkBackup() {
  $.post(URL,{action:'checkBackup'},function(data) {
    if (data) {
      $("#backupLines").html(data);
    }
  });
}

function restoreBackup() {
  myAlert("Appdata Restore","This will restore the backup of your appdata back to your cache drive.  Are you sure you want to do this?","","",true,true,"warning");
}
function backupNow() {
  $.post(URL,{action:'backupNow'});
}
</script>

> For an explanation of these items, please see the online manual

<font color='red'><span id='errors'></span></font><span id='error1'></span>
<div style='width:75%;align:center;margin:auto'>
<table>
<tr>
  <td><b>Appdata Share (Source):</b><br>(If your appData share is not listed, this CA module is not for you)</td>
  <td><select id='source' onchange='validateOptions();'><?=$sourceShares?></select></td>
</tr>
<tr>
  <td><b>Destination Share:</b></td>
  <td><select id='destinationShare' onchange='validateOptions();'><?=$destinationUserList?></select?></td>
</tr>
<tr>
  <td><b>Backup To Disk (Destination):</b></td>
  <td><select id='destination' onchange='validateOptions();'><?=$destinationShares?></select></td>
</tr>
<tr>
  <td><b>Path To Custom Stop Script:</b></td>
  <td><input onchange='validateOptions();' id='stopScript' type='text'></input></td>
</tr>
<tr>
  <td><b>Path To Custom Start Script:</b></td>
  <td><input onchange='validateOptions();' id='startScript' type='text'></input></td>
</tr>
<tr>
  <td><b>Rsync Options:</b><br>*Don't change if you don't know what you're doing</td>
  <td><input id='rsyncOption' type='text' value='<?=$backupOptions['rsyncOption']?>' onchange='validateOptions();'></td>
</tr>
<tr>
  <td><b>Run scripts in place of rsync or in addition to:</b></td>
  <td><select id='runRsync' onchange='validateOptions();'>
        <option value='true'>In Addition To</option>
        <option value='false'>In replacement of</option>
      </select>
  </td>
</tr>
<tr>
  <td><b>Cron Settings</b></td>
  <td><select id='cronSetting' onchange='validateOptions();'>
        <option value='disabled'>Disabled</option>
        <option value='daily'>Daily</option>
        <option value='weekly'>Weekly</option>
        <option value='monthly'>Monthly</option>
        <option value='custom'>Custom</option>
      </select>
  </td>
</tr>
<tr>
  <td><b>Day of Week:</b></td>
  <td><select id='cronDay' onchange='validateOptions();'>
        <option value='0'>Sunday</option>
        <option value='1'>Monday</option>
        <option value='2'>Tuesday</option>
        <option value='3'>Wednesday</option>
        <option value='4'>Thursday</option>
        <option value='5'>Friday</option>
        <option value='6'>Saturday</option>
      </select>
  </td>
</tr>
<tr>
  <td><b>Day of Month:</b></td>
  <td><select id='cronMonth' onchange='validateOptions();'>
        <option value='1'>1st</option>
        <option value='2'>2nd</option>
        <option value='3'>3rd</option>
        <option value='4'>4th</option>
        <option value='5'>5th</option>
        <option value='6'>6th</option>
        <option value='7'>7th</option>
        <option value='8'>8th</option>
        <option value='9'>9th</option>
        <option value='10'>10th</option>
        <option value='11'>11th</option>
        <option value='12'>12th</option>
        <option value='13'>13th</option>
        <option value='14'>14th</option>
        <option value='15'>15th</option>
        <option value='16'>16th</option>
        <option value='17'>17th</option>
        <option value='18'>18th</option>
        <option value='19'>19th</option>
        <option value='20'>20th</option>
        <option value='21'>21st</option>
        <option value='22'>22nd</option>
        <option value='23'>23rd</option>
        <option value='24'>24th</option>
        <option value='25'>25th</option>
        <option value='26'>26th</option>
        <option value='27'>27th</option>
        <option value='28'>28th</option>
        <option value='29'>29th</option>
        <option value='30'>30th</option>
        <option value='31'>31st</option>
      </select>
  </td>
</tr>
<tr>
  <td><b>Hour:</b></td>
  <td><select id='cronHour' onchange='validateOptions();'><?=$cronHour?></select></td>
</tr>
<tr>
  <td><b>Minute:</b></td>
  <td><select id='cronMinute' onchange='validateOptions();'><?=$cronMinute?></select></td>
</tr>
<tr>
  <td><b>Custom Cron Entry:</b></td>
  <td><input type='text' id='cronCustom' onchange='validateOptions();'></input></td>
</tr>
</table>
<font size='3' color='red'><b>NOTE:</b></font> <b>All files</b> within your chosen destination share will be deleted when the backup runs.  Only select a share created <b>SPECIFICALLY<b> for appdata backup purposes<br>

<input type='button' value='Apply' id='Apply' onclick='apply();'><input type='button' value='Backup Now' id='Backup' onclick='backupNow();'><span style='float:right'><input type='button' value='Restore' onclick='restoreBackup();'></span>
</div><br>
<div style='border:1px;border-style:solid;border-color:red'><font size='2'>Backup Status: <span id='backupStatus'></span>
<br>
<span id='backupLines'><br><br><br></span></div>