Menu="BackupMain:1"
Title="Backup / Settings"
---
<?
###############################################################
#                                                             #
# Community Applications copyright 2015-2016, Andrew Zawadzki #
#                                                             #
###############################################################

function logger($string) {
  shell_exec("logger 'CA Backup: $string'");
}

$plugin = "community.applications";

$backupOptions = json_decode(@file_get_contents("/boot/config/plugins/community.applications/BackupOptions.json"),true);
if ( ! $backupOptions['rsyncOption'] ) {  $backupOptions['rsyncOption'] = "-avXHq --delete"; }
if ( ! $backupOptions['cronSetting'] ) {  $backupOptions['cronSetting'] = "disabled"; }
if ( ! $backupOptions['cronDay'] )     {  $backupOptions['cronDay'] = 1; }
if ( ! $backupOptions['cronMonth'] )   {  $backupOptions['cronMonth'] = 2; }
if ( ! $backupOptions['cronHour'] )    {  $backupOptions['cronHour'] = 3; }
if ( ! $backupOptions['cronMinute'] )  {  $backupOptions['cronMinute'] = 0; }
if ( ! $backupOptions['runRsync'] )    {  $backupOptions['runRsync'] = "true"; }
if ( ! $backupOptions['dockerIMG'] )   {  $backupOptions['dockerIMG'] = "exclude"; }
if ( ! $backupOptions['destinationShare'] ) { $backupOptions['destinationShare'] = "CommunityApplicationsAppdataBackup"; }
if ( ! $backupOptions['notification'] ) {  $backupOptions['notification'] = "always"; }
if ( ! $backupOptions['datedBackup'] ) { $backupOptions['datedBackup'] = "no"; }
if ( ! $backupOptions['deleteOldBackup'] ) { $backupOptions['deleteOldBackup'] = "no"; }
if ( ! $backupOptions['fasterRsync'] )  { $backupOptions['fasterRsync'] = "no"; }
if ( ! $backupOptions['backupFlash'] ) { $backupOptions['backupFlash'] = "appdata"; }

# fix destinationShare for compatibility with initial release

$backupOptions['destinationShare'] = "/mnt/user/".$backupOptions['destinationShare'].'/';

logger("Searching for valid source shares");

$destinationShareList = array();
$udList = array();
$sharesList = array();
$disksList = array();

if ( is_dir("/mnt/user") )  { $destinationShareList = array_diff(scandir("/mnt/user"),array(".","..")); }
if ( is_dir("/mnt/disks") ) { $udList = array_diff(scandir("/mnt/disks"),array(".","..")); }
if ( is_dir("/mnt/cache") ) { $sharesList = array_diff(scandir("/mnt/cache"),array(".","..")); }
if ( is_dir("/mnt/") )      { $disksList = array_diff(scandir("/mnt/"),array(".","..","user","user0","disks","cache")); }
natsort($disksList);

$sourceShares = "<option value=''>Select A Share</option>";
foreach ($sharesList as $addShare) {
  $selected = "";
  if ( ! is_dir("/mnt/cache/$addShare") ) {
    continue;
  }
  logger("Found share $addShare on cache drive");
  if ( is_dir("/mnt/user0/$addShare") ) {
    $dirContents = array_diff(scandir("/mnt/user0/$addShare"),array(".",".."));
    if ( ! empty($dirContents) ) {
      logger("Share $addShare is not exclusively stored on cache drive.  Skipping as potential source");
      continue;
    }
  }
  if ( $backupOptions['source'] == "/mnt/cache/$addShare" ) {
    $selected = "selected";
  }    
  $sourceShares .= "<option value='/mnt/cache/$addShare' $selected>$addShare</option>";
  $flag = true;
}
if ( ! $flag ) {
  logger("No shares found exclusively stored on the cache drive");
}

foreach ($udList as $udShare) {
  $selected = "";
  if ( ! is_dir("/mnt/disks/$udShare") ) {
    continue;
  }
  if ( $backupOptions['source'] == "/mnt/disks/$udShare" ) {
    $selected = "selected";
  }
  $sourceShares .= "<option value='/mnt/disks/$udShare' $selected>$udShare (via Unassigned Devices)</option>";
}

$destinationShares = "<option value=''>Select A Disk</option>";
foreach ($disksList as $addShare) {
  $selected = "";
  if ( ! is_dir("/mnt/$addShare") ) {
    continue;
  }
  if ( $backupOptions['destination'] == "/mnt/$addShare" ) {
    $selected = "selected";
  }
  $destinationShares .= "<option value='/mnt/$addShare' $selected>$addShare</option>";
}
foreach ($udList as $udShare) {
  $selected = "";
  if ( ! is_dir("/mnt/disks/$udShare") ) {
    continue;
  }
  if ( $backupOptions['destination'] == "/mnt/disks/$udShare" ) {
    $selected = "selected";
  }
  $destinationShares .= "<option value='/mnt/disks/$udShare' $selected>$udShare (via Unassigned Devices)</option>";
}

for ( $minute = 0; $minute < 60; $minute++ ) {
  $cronMinute .= "<option value='$minute'>$minute</option>";
}

for ( $hour = 0; $hour < 24; $hour++ ) {
  if ( $hour > 11 ) { $suffix = "PM"; $easyHour = $hour - 12; } else { $suffix = "AM"; $easyHour = $hour; }
  if ( $easyHour == 0 ) { $easyHour = 12; }

  $cronHour .= "<option value='$hour'>$easyHour$suffix</option>";
}

?>
<script src="/webGui/javascript/jquery.filetree.js"></script>
<script>
var URL = "/plugins/<?=$plugin?>/include/backupExec.php";
var appliedChanges = false;

$(function() {

  <?if (! $tabbed):?>
  $(".tabbedOnly").hide();
  <?endif;?>
  myAlert("Appdata Backup","When a Backup is running (<em>either manually or a scheduled backup</em>), your docker applications will be <b><font color='red'>stopped</font></b> and then <b><font color='red'>restarted</font></b> at the conclusion of the backup","","",false,"",true,"warning");
  

  $("#fasterRsync").val("<?=$backupOptions['fasterRsync']?>");
  $("#deleteOldBackup").val("<?=$backupOptions['deleteOldBackup']?>");
  $("#datedBackup").val("<?=$backupOptions['datedBackup']?>");
  $("#destinationShare").val("<?=$backupOptions['destinationShare']?>");
  $("#cronSetting").val("<?=$backupOptions['cronSetting']?>");
  $("#cronDay").val("<?=$backupOptions['cronDay']?>");
  $("#cronMonth").val("<?=$backupOptions['cronMonth']?>");
  $("#cronHour").val("<?=$backupOptions['cronHour']?>");
  $("#cronMinute").val("<?=$backupOptions['cronMinute']?>");
  $("#cronCustom").val("<?=$backupOptions['cronCustom']?>");
  $("#runRsync").val("<?=$backupOptions['runRsync']?>");
  $("#dockerIMG").val("<?=$backupOptions['dockerIMG']?>");
  $("#startScript").val("<?=$backupOptions['startScript']?>");
  $("#stopScript").val("<?=$backupOptions['stopScript']?>");
  $("#notification").val("<?=$backupOptions['notification']?>");
  $("#logBackup").val("<?=$backupOptions['logBackup']?>");
  $("#backupFlash").val("<?=$backupOptions['backupFlash']?>");
  $("#usbDestination").val("<?=$backupOptions['usbDestination']?>");
  
  $("#destinationShare").fileTreeAttach();
  $("#startScript").fileTreeAttach();
  $("#stopScript").fileTreeAttach();
  $("#usbDestination").fileTreeAttach();

  var source = $("#source").val();
  $("#excludedFoldersList").fileTree({
    root: source,
    multiSelect: true,
    filter: "HIDE_FILES_FILTER",
    folderEvent: "nothing"
  });
  
  validateOptions(true);
});

function myAlert(description,textdescription,textimage,imagesize, outsideClick, showCancel, showConfirm, alertType) {
  if ( !outsideClick ) outsideClick = false;
  if ( !showCancel )   showCancel = false;
  if ( !showConfirm )  showConfirm = false;
  if ( imagesize == "" ) { imagesize = "80x80"; }
   
  swal({
    title: description,
    text: textdescription,
    imageUrl: textimage,
    imageSize: imagesize,
    allowOutsideClick: outsideClick,
    showConfirmButton: showConfirm,
    showCancelButton: showCancel,
    type: alertType,
    html: true
  });
}

function changeSource() {
  $('#excludedFoldersList').html(" ");
  var source = $("#source").val();
  $("#excludedFoldersList").fileTree({
    root: source,
    multiSelect: true,
    filter: "HIDE_FILES_FILTER",
    folderEvent: "nothing"
    });
  validateOptions();
}

function validateOptions(initialization) {
  if (initialization != true ) {
    appliedChanges = true;
  }
  
  var cronSetting = $("#cronSetting").val();
  switch (cronSetting) {
    case 'daily':
      $("#cronDay,#cronMonth,#cronCustom").prop("disabled",true);
      $("#cronHour,#cronMinute").prop("disabled",false);
      break;
    case 'weekly':
      $("#cronMonth,#cronCustom").prop("disabled",true);
      $("#cronDay,#cronHour,#cronMinute").prop("disabled",false);
      break;
    case 'monthly':
      $("#cronCustom,#cronDay").prop("disabled",true);
      $("#cronMonth,#cronHour,#cronMinute").prop("disabled",false);
      break;
    case 'custom':
      $("#cronCustom").prop("disabled",false);
      $("#cronDay,#cronMonth,#cronHour,#cronMinute").prop("disabled",true);
      break;
    case 'disabled':
      $("#cronCusom,#cronDay,#cronMonth,#cronHour,#cronMinute").prop("disabled",true);
      break;
  }
  
  var backupFlash = $("#backupFlash").val();
  var usbDestination = $("#usbDestination").val();
  var source = $("#source").val();
  var destination = $("#destination").val();
  var destinationShare = $("#destinationShare").val();
  var stopScript = $("#stopScript").val();
  var startScript = $("#startScript").val();
  var datedBackup = $("#datedBackup").val();
  var deleteOldBackup = $("#deleteOldBackup").val();
  if ( deleteOldBackup == 0 ) {
    $("#deleteOldBackup").val("");
  }
  if ( backupFlash == "separate" ) {
    $("#usbDestination").prop("disabled",false);
  } else {
    $("#usbDestination").prop("disabled",true);
  }

  var excludeButton = "<input type='button' id='excludedFolders' name='excludedFolders' value='Add' data-pickfilter='HIDE_FILES_FILTER' data-pickmultiselect='true' data-pickroot='/mnt/user' data-pickfolders='true'>";
  
  destinationShare = destinationShare.replace("/mnt/user/","");
 
  $("#destinationShare").val(destinationShare);
  $('#excludedSpan').html(" ");
  $('#excludedSpan').html(excludeButton);
  $('#excludedFolders').fileTreeAttach();
  
  if ( datedBackup == "yes" ) {
    $("#deleteOldBackup").prop("disabled",false);
    $("#fasterRsync").prop("disabled",false);
  } else {
    $("#deleteOldBackup").prop("disabled",true);
    $("#fasterRsync").prop("disabled",true);
  }
  
  stopScript = stopScript.trim();
  startScript = startScript.trim();
  
  $.post(URL,{action:'validateBackupOptions',usbDestination:usbDestination,backupFlash:backupFlash,source:source,destinationShare:destinationShare,destination:destination,stopScript:stopScript,startScript:startScript}, function (data) {
    if (data) {
      data = data.trim();
      if ( data == "NONE" ) {
        if ( appliedChanges ) {
          $("#Apply").prop("disabled",false);
          $("#Backup").prop("disabled",true);
        } else {
          $("#errors").html("false");
          $("#Apply").prop("disabled",true);
          if ( $('#Backup').attr('data-running') == 'true' ) {
            $("#Backup").prop("disabled",true);
          }
        }          
        $("#errors").html("");
      } else {
        $("#errors").html(data);
        $("#Apply,#Backup,#restore").prop("disabled",true);
      }
    }
  });
}  
  
function apply() {
  
  var backupFlash = $("#backupFlash").val();
  var usbDestination = $("#usbDestination").val();
  var source = $("#source").val();
  var destinationShare = $("#destinationShare").val();
  var destination = $("#destination").val();
  var stopScript = $("#stopScript").val();
  var startScript = $("#startScript").val();
  var rsyncOption = $("#rsyncOption").val();
  var cronSetting = $("#cronSetting").val();
  var cronDay = $("#cronDay").val();
  var cronMonth = $("#cronMonth").val();
  var cronHour = $("#cronHour").val();
  var cronMinute = $("#cronMinute").val();
  var cronCustom = $("#cronCustom").val();
  var runRsync = $("#runRsync").val();
  var dockerIMG = $("#dockerIMG").val();
  var notification = $("#notification").val();
  var excluded = $("#excluded").val();
  var logBackup = $("#logBackup").val();
  var datedBackup = $("#datedBackup").val();
  var deleteOldBackup = $("#deleteOldBackup").val();
  var fasterRsync = $("#fasterRsync").val();
  
  excluded = excluded.trim();
  
  if ( backupFlash == "separate" ) {
    var usbText = " and <font color='red'>"+usbDestination+"</font> (Flash Drive Destination) ";
  } else {
    var usbText = "";
  }
  
  var popUpText = "Warning: All files within <font color='red'>" + destinationShare + "</font> ";
  if ( excluded ) {
    popUpText = popUpText.concat("(excluding the " + excluded + " folders)");
  } else {
    popUpText = popUpText.concat("(including all folders)");
  }
  popUpText = popUpText.concat(usbText);
  popUpText = popUpText.concat(" will be overwritten / deleted during a backup process!");
  swal({
    title: "Are You Sure?",
    text: popUpText,
    html: true,
    type: "warning",
    showCancelButton: true,
    closeOnConfirm: true
    },
    function() {
      appliedChanges = false;

      rsyncOption = rsyncOption.trim();
      stopScript = stopScript.trim();
      startScript = startScript.trim();
  
      $.post(URL,{action:'applyBackupOptions',usbDestination:usbDestination,backupFlash:backupFlash,fasterRsync:fasterRsync,deleteOldBackup:deleteOldBackup,datedBackup:datedBackup,logBackup:logBackup,excluded:excluded,notification:notification,dockerIMG:dockerIMG,source:source,destinationShare:destinationShare,destination:destination,stopScript:stopScript,startScript:startScript,rsyncOption:rsyncOption,cronDay:cronDay,cronMonth:cronMonth,cronHour:cronHour,cronMinute:cronMinute,cronCustom:cronCustom,cronSetting:cronSetting,runRsync:runRsync});

      validateOptions(true);
      changeRestoreOptions();
    });
}  
function setExcluded() {
				$el = $( "#excludedFoldersList input:checked" );

				if( $el.length === 0 )
				{
					checked = "";
				}
				else {
					var checked = $el
						.map(function() {
							return $(this).parent().find('a:first').text();
						})
						.get()
						.join(',');
						}
    $("#excluded").val(checked);
    validateOptions();
 }


function backupNow() {
  var source = $('#source').val();
  var destination = $("#destinationShare").val();;
  var destinationDisk = $("#destination").val();
  
  swal({
    title: "Backup Appdata",
    text: "This will backup your appdata folder from <font color='red'><em>"+source+"</em></font> to <font color='red'><em>"+destination+" ("+destinationDisk+")",
    showCancelButton: true,
    closeOnConfirm: true,
    type: "warning",
    html: true
    },
    function() {
      $.post(URL,{action:'backupNow'});
    });
}

function abort() {
  swal({
    title: "Are you sure?",
    text: "This will abort the current backup / restore operation and restart your applications",
    showCancelButton: true,
    closeOnConfirm: true
    },
    function() {
      $.post(URL,{action:'abortBackup'});
    });
}

</script>
<style>

.back-to-top {
  background: none;
  margin: 0;
  position: fixed;
  bottom: 50px;
  right: 0;
  width: 70px;
  height: 70px;
  z-index: 100;
  display: none;
  text-decoration: none;
  color: #ffffff;
}

</style>
<script>

jQuery(document).ready(function() {
  var offset = 250;
  var duration = 500;
  jQuery(window).scroll(function() {
    if (jQuery(this).scrollTop() > offset) {
      jQuery('.back-to-top').fadeIn(duration);
    } else {
      jQuery('.back-to-top').fadeOut(duration);
    }
  });

  jQuery('.back-to-top').click(function(event) {
    event.preventDefault();
    jQuery('html, body').animate({scrollTop: 0}, duration);
    return false;
  })
});

</script>
<style>
.fileTree{width:305px;max-height:150px;overflow:scroll;position:absolute;z-index:100;display:none;}
</style>
<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery.filetree.css">

> For help with this plugin, click here (a new tab will open with the help file)  <strong><font size="2"><a href="Settings/caHelp#backupSettings" target="_blank">HELP</a></font></strong>

<font color='red'><center><span id='errors'></span></font><span id='error1'></span></center>

<div style='width:75%;align:center;margin:auto'>
<font color='red'>Note:</font> If you are attempting to restore your appdata, then you shouldn't need to set any of the following settings if they appear correctly under the restore tab.<br><br><br>

<table>
<tr>
  <td><b>Appdata Share (Source):</b><br>(If your appData share is not listed, consider installing this <a href='http://lime-technology.com/forum/index.php?topic=49992.0' target='_blank'>plugin</a> in conjunction with <a href='http://lime-technology.com/forum/index.php?topic=50416.msg484239#msg484239' target='_blank'>this</a></td>
  <td><select id='source' onchange='changeSource();'><?=$sourceShares?></select></td>
</tr>
<tr>
  <td><b>Save To Disk #:</b><br>Backups and restores may not complete without error<br>when using an Unassigned Devices Mount Point</b></td>
  <td><select id='destination' onchange='validateOptions();'><?=$destinationShares?></select></td>
</tr>
<tr>
  <td><b>Destination Share:</b><br>If using an Unassigned Devices mount as save to Disk #,<br> manually type in the destination folder here</td>
  <td><input type='text' id="destinationShare" name="shareFolder" value="/mnt/user" data-pickfilter="HIDE_FILES_FILTER" data-pickroot="/mnt/user" data-pickfolders="true" onchange='validateOptions();'></td>
</tr>
<tr>
  <td><b>Excluded Folders:</b></td>
  <td><input type='text' id='excluded' value='<?=$backupOptions['excluded']?>'></span></td>
  <td><center><b>Excluded Folder Browser</b><br><input type='button' value='Exclude Selected' onclick='setExcluded();'><br></center><div id='excludedFoldersList' style='width:305px;max-height:150px;overflow:scroll;position:absolute;z-index:100;'></div><br><center></td>
 </tr>
<tr>
  <td><b>Backup USB Flash Drive:</b></td>
  <td><select id='backupFlash' onchange='validateOptions();'>
    <option value='appdata'>Same Destination as Appdata</option>
    <option value='separate'>Separate Destination</option>
    <option value='no'>Don't Backup</option>
    </select>
  </td>
</tr>
<tr>
  <td><b>USB Backup Destination:<b><br>See Manual</td>
  <td><input type='text' id="usbDestination" name="usb destination" value="" placeholder='select a destination' data-pickfilter="HIDE_FILES_FILTER" data-pickroot="/mnt/" data-pickfolders="true" onchange='validateOptions();'></td>
</tr>
<tr>
  <td><b>Notification Settings:</b></td>
  <td><select id='notification' onchange='validateOptions();'>
    <option value='disabled'>Disabled</option>
    <option value='always'>Start And Stop</option>
    <option value='completion'>Completion Only</option>
    <option value='errors'>Errors Only</option>
    </select>
  </td>
</tr>
<tr>
  <td><b>Path To Custom Stop Script:</b></td>
  <td><input onchange='validateOptions();' id='stopScript' type='text' data-pickroot="/" data-pickfolders="true"></input></td>
</tr>
<tr>
  <td><b>Path To Custom Start Script:</b></td>
  <td><input onchange='validateOptions();' id='startScript' type='text' data-pickroot="/" data-pickfolders="true"></input></td>
</tr>
<tr>
  <td><b>Rsync Options:</b><br><font size='0'>Don't change if you don't know what you're doing</font></td>
  <td><input id='rsyncOption' type='text' value='<?=$backupOptions['rsyncOption']?>' onchange='validateOptions();'></td>
</tr>
<tr>
  <td><b>Run scripts in place of rsync or in addition to:</b></td>
  <td><select id='runRsync' onchange='validateOptions();'>
        <option value='true'>In Addition To</option>
        <option value='false'>In replacement of</option>
      </select>
  </td>
</tr>
<tr>
  <td><b>Save Log File to flash?<b></td>
  <td><select id='logBackup' onchange='validateOptions();'>
    <option value='no'>No</option>
    <option value='yes'>Yes</option>
    <option value='append'>Yes (and append file)</option>
  </select></td>
</tr>
<tr>
  <td><b>Scheduled Backup Frequency</b></td>
  <td><select id='cronSetting' onchange='validateOptions();'>
        <option value='disabled'>Disabled</option>
        <option value='daily'>Daily</option>
        <option value='weekly'>Weekly</option>
        <option value='monthly'>Monthly</option>
        <option value='custom'>Custom</option>
      </select>
  </td>
</tr>
<tr>
  <td><b>Put backups into separate dated sub folders?</b></td>
  <td><select id='datedBackup' onchange='validateOptions();'>
    <option value='no'>No</option>
    <option value='yes'>Yes</option>
  </td>
</tr>
<tr>
  <td><b>Delete backups after how many days?</b></td>
  <td><input id='deleteOldBackup' type='number' val='' placeholder='Never Delete' onchange='validateOptions();'></td>
</tr>
<tr>
  <td><b>Attempt faster rsync's (see manual)</b></td>
  <td><select id='fasterRsync' onchange='validateOptions();'>
    <option value='no'>No (default)</option>
    <option value='yes'>Yes</option>
    </select>
  </td>
</tr>
<tr>
  <td><b>Day of Week:</b></td>
  <td><select id='cronDay' onchange='validateOptions();'>
        <option value='0'>Sunday</option>
        <option value='1'>Monday</option>
        <option value='2'>Tuesday</option>
        <option value='3'>Wednesday</option>
        <option value='4'>Thursday</option>
        <option value='5'>Friday</option>
        <option value='6'>Saturday</option>
      </select>
  </td>
</tr>
<tr>
  <td><b>Day of Month:</b></td>
  <td><select id='cronMonth' onchange='validateOptions();'>
        <option value='1'>1st</option>
        <option value='2'>2nd</option>
        <option value='3'>3rd</option>
        <option value='4'>4th</option>
        <option value='5'>5th</option>
        <option value='6'>6th</option>
        <option value='7'>7th</option>
        <option value='8'>8th</option>
        <option value='9'>9th</option>
        <option value='10'>10th</option>
        <option value='11'>11th</option>
        <option value='12'>12th</option>
        <option value='13'>13th</option>
        <option value='14'>14th</option>
        <option value='15'>15th</option>
        <option value='16'>16th</option>
        <option value='17'>17th</option>
        <option value='18'>18th</option>
        <option value='19'>19th</option>
        <option value='20'>20th</option>
        <option value='21'>21st</option>
        <option value='22'>22nd</option>
        <option value='23'>23rd</option>
        <option value='24'>24th</option>
        <option value='25'>25th</option>
        <option value='26'>26th</option>
        <option value='27'>27th</option>
        <option value='28'>28th</option>
        <option value='29'>29th</option>
        <option value='30'>30th</option>
        <option value='31'>31st</option>
      </select>
  </td>
</tr>
<tr>
  <td><b>Hour:</b></td>
  <td><select id='cronHour' onchange='validateOptions();'><?=$cronHour?></select></td>
</tr>
<tr>
  <td><b>Minute:</b></td>
  <td><select id='cronMinute' onchange='validateOptions();'><?=$cronMinute?></select></td>
</tr>
<tr>
  <td><b>Custom Cron Entry:</b></td>
  <td><input type='text' id='cronCustom' onchange='validateOptions();'></input></td>
</tr>
</table>
<font size='3' color='red'><b>NOTE: All files</b> within your chosen destinations will be deleted when the backup runs.  Only select a share created <b>SPECIFICALLY<b> for appdata (and USB) backup purposes</font><br>

<input type='button' value='Apply' id='Apply' onclick='apply();'><input type='button' value='Backup Now' id='Backup' onclick='backupNow();'><span class='statusLines'></span>
</div><br>


<center>For support for this plugin, visit here: <a href="http://lime-technology.com/forum/index.php?topic=40262.0" target="_blank">http://lime-technology.com/forum/index.php?topic=40262.0</a></center>

> <center><a href='https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=7M7CBCVU732XG' target='_blank'><img src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif"></a></center>

<a href="#" class="back-to-top" style="display: inline;">
<img src='/plugins/community.applications/images/up.png' style='width:50px;height:50px' href="#" class="back-to-top"></img>
</a>