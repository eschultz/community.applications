Menu="Apps"
Icon="community.applications.png"
Title="Community Applications"
---
<?
###############################################################
#                                                             #
# Community Applications copyright 2015-2016, Andrew Zawadzki #
#                                                             #
###############################################################

require_once("/usr/local/emhttp/plugins/community.applications/include/caCredits.php");

$installedVersion = exec("/usr/local/emhttp/plugins/dynamix.plugin.manager/scripts/plugin version /var/log/plugins/community.applications.plg");
if ( is_file("/tmp/plugins/community.applications.plg") ) {
  $upgradeVersion = exec("/usr/local/emhttp/plugins/dynamix.plugin.manager/scripts/plugin version /tmp/plugins/community.applications.plg");
} else {
  $upgradeVersion = "0";
}
if ( $installedVersion < $upgradeVersion ) {
  $upgradeAvailable = "true";
}
$plugin = "community.applications";
$cfg = parse_plugin_cfg($plugin);

if ( ! is_file("/boot/config/plugins/$plugin/accepted") ) {
  $firstRun = "true";
}
$vars = parse_ini_file("/var/local/emhttp/var.ini");
$toolTipsterAllowed = version_compare($vars['version'],"6.3.3",">=") ? "true" : "false";
if ( $cfg['tooltipster'] == "false" ) {
  $toolTipsterAllowed = "false";
}

$tabMode = $cfg['newWindow'];
$line_color = $display['theme']=='black' ? '#202020' : '#E8E8E8';

$timeNew = str_replace("-","",$cfg['timeNew']);
$categoryTitle = "Recommended Applications";
$viewMode = $cfg['viewMode'];
$execPath = "/plugins/$plugin/scripts";
$commandArg="?appNumber=";

if ( is_dir("/var/lib/docker/containers") ) {
  $dockerRunning = "true";
} else {
  $dockerRunning = "false";
}
?>
<style>
.searchSubmit{font-family:'FontAwesome';width:29px;height:26px;border:1px solid #dadada;border-radius:0px 4px 4px 0px;font-size:11px;position:relative;padding:0px 2px;background:#DADADA;border:none;cursor:pointer;}
table#templates_list tbody td.topRow{border-top:1px solid <?=$line_color?>;}
.back-to-top {background: none;margin: 0;position: fixed;bottom: 50px;right: 0;width: 70px;height: 70px;z-index: 100;display: none;text-decoration: none;color: #ffffff;}
input.appButtons {margin:0px;}
input.viewButton {margin:1px;}
input.sortButton {margin:1px;}
input.dirButton {margin:1px;}
input.resourceSort {margin:1px;}
input.resourceDir {margin:1px;}
input.allButtons {margin:-1px;}
</style>

<script>
jQuery(document).ready(function() {
  var offset = 250;
  var duration = 500;
  jQuery(window).scroll(function() {
    if (jQuery(this).scrollTop() > offset) {
      jQuery('.back-to-top').fadeIn(duration);
    } else {
      jQuery('.back-to-top').fadeOut(duration);
    }
  });
  
  jQuery('.back-to-top').click(function(event) {
    event.preventDefault();
    jQuery('html, body').animate({scrollTop: 0}, duration);
    return false;
  })
});

var URL = "/plugins/<?=$plugin?>/include/exec.php";
var monitorInterval;
var last = $('input[name$="tabs"]').length;
var VIEWSBACKUP = " ";

var categorySub = {
  backup:"backup:",
  cloud:"cloud:",
  downloaders:"downloaders:",
  HomeAutomation:"HomeAutomation:",
  networkALL:"network:",
  mediaappALL:"MediaApp:",
  mediaserverALL:"MediaServer:",
  productivity:"productivity:",
  toolsALL:"tools:",
  other:"other:",
  Plugins:"Plugins:",
  networkweb:"Network:web",
  networkdns:"Network:DNS",
  networkftp:"Network:FTP",
  networkproxy:"network:proxy",
  networkvoip:"Network:VOIP",
  networkmanagement:"Network:Management",
  networkmessenger:"Network:Messenger",
  networkother:"Network:Other",
  MediaServerVideo:"MediaServer:Video",
  MediaServerMusic:"MediaServer:Music",
  MediaServerBooks:"MediaServer:Books",
  MediaServerPhotos:"MediaServer:Photos",
  MediaServerOther:"MediaServer:Other",
  MediaAppVideo:"MediaApp:Video",
  MediaAppMusic:"MediaApp:Music",
  MediaAppBooks:"MediaApp:Books",
  MediaAppPhotos:"MediaApp:Photos",
  MediaAppOther:"MediaApp:Other",
  tools:"Tools:",
  toolssystem:"Tools:System",
  NONE:"NONE",
  New:"New",
  UNCATEGORIZED:"UNCATEGORIZED",
  All:"All"  
  };
  
var categoryDesc = {
  mediaappALL:"All Media Applications",
  mediaserverALL:"All Media Servers",
  networkALL:"All Network Services",
  toolsALL:"All Tools / Utilities",
  networkweb:"Network Services: Web Servers",
  networkdns:"Network Services: DNS Clients / Servers",
  networkftp:"Network Services: FTP Clients / Servers",
  networkproxy:"Network Services: Proxies",
  networkvoip:"Network Services: Voice Over IP",
  networkmanagement:"Network Services: Management / Analyzers",
  networkmessenger:"Network Services: Messengers",
  networkother:"Network Services: Other",
  MediaServerVideo:"Media Servers: Video",
  MediaServerMusic:"Media Servers: Music",
  MediaServerBooks:"Media Servers: Books",
  MediaServerPhotos:"Media Servers: Photos",
  MediaServerOther:"Media Servers: Other",
  MediaAppVideo:"Media Applications: Video",
  MediaAppMusic:"Media Applications: Music",
  MediaAppBooks:"Media Applications: Books",
  MediaAppPhotos:"Media Applications: Photos",
  MediaAppOther:"Media Applications: Other",
  toolssystem:"Tools: System",
  NONE:"None Selected",
  New:"New / Updated Applications (within the last <?=$timeNew?>)",
  UNCATEGORIZED: "All Uncategorized Applications",
  All: "All Available Applications"
  };

function setToolTip() {
  if ( "<?=$toolTipsterAllowed?>" == "true" ) {
    $('.ca_infoPopup').attr('title','Loading...');
    $('.ca_appPopup').attr('title','Loading...');
    $('.ca_tooltip').tooltipster({delay:[1000,1],timer:15000, animation:'grow', arrow:true, trigger:'custom', triggerOpen:{mouseenter: true}, triggerClose:{click:true,scroll:true,mouseleave:true}});
    $('.ca_infoPopup').tooltipster({
      contentAsHTML: true,
      maxWidth:550,
      minWidth:550,
      animation: 'grow',
      triggerClose:{click:false,scroll:true,mouseleave:false},
      interactive: true,
      viewportAware: true,
      functionInit: function(instance,helper) {
        var origin = $(helper.origin);
        var appNumber = origin.attr('data-appNumber');
        $.post("/plugins/community.applications/scripts/showInfo.php",{action:'none',appNumber:appNumber},function(data) {
          if (data) {
            instance.content(data);
          }
        });
      }
    });     
    $('.ca_appPopup').tooltipster({
      contentAsHTML: true,
      maxWidth:550,
      minWidth:550,
      animation: 'grow',
      arrow:true,
      triggerClose:{click:false,scroll:true,mouseleave:false},
      interactive: true,
      viewportAware: true,
      functionInit: function(instance,helper) {
        var origin = $(helper.origin);
        var appNumber = origin.attr('data-appNumber');
        $.post("/plugins/community.applications/scripts/showDesc.php",{action:'none',appNumber:appNumber},function(data) {
          if (data) {
            instance.content(data);
          }
        });
      }
    });      
  }
}

$(function(){
  <?if ($tabbed):?>
    $('.tabs').append("<span id='searchFilter' class='status vhshift' style='display:none'><input type='text' id='searchBox' class='narrow' placeholder='Search' style='margin-left:10px;margin-right:0'><button class='searchSubmit' style='margin-right:10px' onclick='doSearch(true)'><i id='searchButton' class='fa fa-search fa-lg'></i></button><input class='ca_staticTips' type='button' id='updateButton' value='Legacy Mode' title='Switches CA to Legacy Mode (until the next appfeed update) - Not generally recommended' onclick='forceUpdateButton()' disabled><?if ( $toolTipsterAllowed == "false"):?><input type='button' value='CA Modules' onclick='caModules();'></span><?endif;?>");
    for (var x=1; x<last; x++) $('#tab'+x).bind({click:function(){$('#searchFilter').hide();}});
    $('#tab'+last).bind({click:function(){$('#searchFilter').show();readMore();}});
  <?else:?>
    $('div[id=title]').last().append("<span id='searchFilter' class='status vhshift'><input type='text' id='searchBox' class='narrow' placeholder='Search' style='margin-left:10px;margin-right:0'><button class='searchSubmit' style='margin-right:10px' onclick='doSearch(true)'><i id='searchButton' class='fa fa-search fa-lg'></i></button><input class='ca_staticTips' type='button' id='updateButton' value='Legacy Mode' title='Switches CA to Legacy Mode (until the next appfeed update) - Not generally recommended' onclick='forceUpdateButton()' disabled><?if ( $toolTipsterAllowed == "false"):?><input type='button' value='CA Modules' onclick='caModules();'><?endif;?>");
  <?endif;?>
  if ( "<?=$firstRun?>" == "true" ) { $("#appWarning").show(); }
  if ( "<?=$dockerRunning?>" == "false" ) { $("#monitor").hide(); }
  $("#maxPerPage").val("<?=$cfg['maxPerPage']?>");
  if ( "<?=$cfg['favourite']?>" != "None" ) { 
    $("#maxPerPage").prop("disabled",true);
    $("#maxPerPage").val("-1");
  }
  if ( "<?=$toolTipsterAllowed?>" == "true" ) {
    $('.ca_staticTips').tooltipster({delay:[1000,1],timer:15000, animation:'grow', arrow:true, trigger:'custom', triggerOpen:{mouseenter: true}, triggerClose:{click:true,scroll:true,mouseleave:true}});
    $('.ca_toolsView').tooltipster({
      trigger: 'custom',
      triggerOpen: {mouseenter:true,click:true},
      contentAsHTML: true,
      animation: 'grow',
      arrow: true,
      triggerClose:{click:true,scroll:true,mouseleave:true},
      interactive: true,
      viewportAware: true,
      functionBefore: function(instance,helper) {
        var origin = $(helper.origin);
        var myID = origin.attr('id');
        setSortOrder();
        var displayContent = $("#tooltipviews").html();
        $("#tooltipviews").attr("data-backup",displayContent);
        $("#tooltipviews").html("");
        instance.content(displayContent);
      },
      functionReady: function(instance,helper) {
        $(".viewButton,.sortButton,.dirButton").click(function() { changeSortOrder(this.id,$(this).attr("class")); });
        $(".resourceSort,.resourceDir").click(function() { changeResource(this.id,$(this).attr("class")); });
      },
      functionAfter: function(instance,helper) {
        $("#tooltipviews").html($("#tooltipviews").attr("data-backup"));
        setSortOrder();
      }
    }); 
    $('.ca_credits').tooltipster({
      trigger: 'custom',
      triggerOpen: {mouseenter:true},
      contentAsHTML: true,
      maxWidth:550,
      minWidth:550,
      animation: 'grow',
      triggerClose:{click:false,scroll:true,mouseleave:true},
      interactive: true,
      viewportAware: true,
      functionBefore: function(instance,helper) {
        var origin = $(helper.origin);
        var myID = origin.attr('id');
        instance.content("<div style='overflow:scroll; max-height:550px; height:550px; overflow-x:hidden; overflow-y:auto;'><center><img src='/plugins/community.applications/images/CA.png'><br><font size='6' color='white'>Community Applications</font><br><br><?=$caCredits?></div>");
      }
    });
    $('.ca_section').tooltipster({
      trigger: 'custom',
      triggerOpen: {mouseenter:true,click:true},
      contentAsHTML: true,
      animation: 'grow',
      arrow: true,
      triggerClose:{click:true,scroll:true,mouseleave:true},
      interactive: true,
      viewportAware: true,
      functionBefore: function(instance,helper) {
        var currentSection = $("#sortorder").attr("data-section");
        $(".appButtons").prop("disabled",false);
        $("#"+currentSection).prop("disabled",true);
        var displayContent = $("#sections").html();
        instance.content(displayContent);
      },functionReady: function(instance,helper) {
        $(".appButtons").click(function() { $(this).prop("disabled",true); });
      }
    });  
    $('.ca_categories').tooltipster({
      trigger: 'custom',
      triggerOpen: {mouseenter:true,click:true},
      contentAsHTML: true,
      animation: 'grow',
      arrow: true,
      triggerClose:{click:true,scroll:true,mouseleave:true},
      interactive: true,
      viewportAware: true,
      functionBefore: function(instance,helper) {
        var currentCategory = $("#sortorder").attr("data-main_category");
        var selectedCategory = $("#sortorder").attr("data-selected_category");
        $(".allButtons").prop("disabled",false);
        $("#"+selectedCategory).prop("disabled",true);
        var otherContent = $("#otherButtons").html();
        var displayContent = $("#"+currentCategory).html();
        instance.content(displayContent + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + otherContent);
      },functionReady: function(instance,helper) {
        $(".allButtons").click(function() { 
          $(this).prop("disabled",true); 
          $("#sortorder").attr("data-selected_category",this.id);
          changeCategory(this);
        });
      }
    });  
  }
  
  $("#monitor").click(function() { Monitor(); });
  $(".viewButton,.sortButton,.dirButton").click(function() { changeSortOrder(this.id,$(this).attr("class")); });
  $(".resourceSort,.resourceDir").click(function() { changeResource(this.id,$(this).attr("class")); });
  $("#calculateAppdata").click(function() { calculateAppdataSize(); });
  $(".initDockerSearch").click(function() { initDockerSearch(); });
  $(".moduleButton").click(function() { caModules(); });
  $(".allButtons").click(function() {
    changeCategory(this);
  });
  myAlert("Updating Content","Retrieving the latest application Lists","/plugins/community.applications/images/spinner2.gif","40x40");
  $.post(URL,{action:'force_update'});

  if ( "<?=$cfg['viewMode']?>" == "icon" ) $("#viewIcon").prop("disabled",true);
  if ( "<?=$cfg['viewMode']?>" == "table" ) $("#viewTable").prop("disabled",true);
  if ( "<?=$cfg['viewMode']?>" == "detail" ) $("#viewDetail").prop("disabled",true);



  getContent(true,'INITIALIZE','None Selected');
  $('#searchBox').keyup(function(e) {if(e.which == 13){doSearch(false);}});
});

function changeCategory(button) {
  var description = button.value;
  var category = button.id;
  clearSearchBox();
  
  $('.allButtons').prop('disabled', false);
  $(button).prop("disabled",true);

  if ( typeof categorySub[button.id] !== "undefined" ) {
    category = categorySub[button.id];
  }
  if ( typeof categoryDesc[button.id] !== "undefined" ) {
    description = categoryDesc[button.id];
  }
  var newFlag = false;
  $("#sortorder").attr("data-main_category","MainCategory");
<?if ( $toolTipsterAllowed == "false" ) : ?>
  switch (category) {
    case "network:":
      $("#network").prop("disabled",true);
      $("#sortorder").attr("data-main_category","NetworkCategory");
      break;
    case "MediaApp:":
      $("#MediaApp").prop("disabled",true);
      $("#sortorder").attr("data-main_category","MediaAppCategory");
      break;
    case "MediaServer:":
      $("#MediaServer").prop("disabled",true);
      $("#sortorder").attr("data-main_category","MediaServerCategory");
      break;
    case "tools:":
      $("#tools").prop("disabled",true);
      $("#sortorder").attr("data-main_category","ToolsCategory");
      break;
    case "New":
      newFlag = true;
      break;
  }
<?endif;?>
  getContent(false,category,description,newFlag);
}

function caModules() {
  $(".appButtons,#monitor").prop("disabled",false);
  $("#CAmodules").prop("disabled",true);
  $("#sortorder").attr("data-section","CAmodules");
  $("#currentSection").html("Additional CA Modules");
  clearTimeout(monitorInterval);  
  clearSearchBox();
  $("#sortorder").attr("data-docker","");
  $("#templates_content,.resourceMonitor,.dockerSearch,#AppsOnly").hide();
  $("#templates_content").html("<center><font size='3'>Searching</font></center>");
  $("#templates_content,#sortButtons,#Total1,#templateSortButtons,#sortIcon").show();
  $("#Category").html("All Community Application Modules");
  $.post(URL,{action:'populateModules'},function(data) {
    if (data) {
      changeSortOrder(null,null,null);
    }
  });
}

function changePage(pageNumber) {
  var sortOrder = getSortOrder();
  var windowWidth = getWindowWidth();
  var maxPerPage = getPerPage();
  
  $("#Total").html("<img src='/plugins/community.applications/images/spinner2.gif' style='height:30px;width:30px'>");
  $.post(URL,{action:'display_content',sortOrder:sortOrder,windowWidth:windowWidth,pageNumber:pageNumber,maxPerPage:maxPerPage},function(data3) {
    if (data3) {
      $('#templates_content').html(data3);
      $("#templates_content").fadeIn();
      readMore();
      setToolTip();
    }
  });
}

function getWindowWidth() {
  var windowWidth = $(window).width();
  $("#windowWidth").html(windowWidth);
  return windowWidth;
}

function myAlert(description,textdescription,textimage,imagesize, outsideClick, showCancel, showConfirm, alertType) {
  if ( !outsideClick ) outsideClick = false;
  if ( !showCancel )   showCancel = false;
  if ( !showConfirm )  showConfirm = false;
  if ( imagesize == "" ) { imagesize = "80x80"; }
  swal({
    title: description,
    text: textdescription,
    imageUrl: textimage,
    imageSize: imagesize,
    allowOutsideClick: outsideClick,
    showConfirmButton: showConfirm,
    showCancelButton: showCancel,
    type: alertType,
    html: true
  });
}

function myCloseAlert() {
  swal.close();
}

function readMore() {
  $('.desc_readmore').readmore({maxHeight:150});
}

function showInfo(appNumber,appName) {
  openBox('<?=$execPath?>/showInfo.php?appNumber=' + appNumber,appName + " Changelog / More Information",550,550);
}

function showCredits() {
  myAlert("Community Applications","<?=$caCredits?>","/plugins/<?=$plugin?>/images/community.applications.png","40x40", true, false, true);
}

function showDesc(appNumber,appName) {
  openBox('<?=$execPath?>/showDesc.php?appNumber=' + appNumber + '&appName=' + appName,appName + " Description",550,550);
}

function doSearch(button) {
  var windowWidth = getWindowWidth();
  var filter = $('#searchBox').val();
  var maxPerPage = getPerPage();
  $("#sortorder").attr("data-docker","");
  filter = filter.replace(/[^a-z0-9]/gi,' ')
  filter = filter.trim();
  $('#searchBox').val(filter);

  $("#monitor,.appButtons,#maxPerPage").prop("disabled",false);
  $(".resourceMonitor").hide();
  $("#templates_content,#AppsOnly,#templateSortButtons,#sortIcon").show();
  $("#AppStore").prop("disabled",true);

  if ($('#searchButton').hasClass('fa-search')) {
    if (filter) {
      $('#searchButton').toggleClass('fa-search fa-remove');
    }
  } else if (button) {
    clearSearchBox();
    filter = '';
  } else {
    if (!filter) {
      return;
    }
  }
  $("#Total1").show();
  $("#Total").html("Searching... <img src='/plugins/community.applications/images/spinner2.gif' style='height:30px;width:30px'>");
  $('#BackToTop').hide();
  if (filter) {
    enableButtons();
    $("#Category").html("<?=$categoryTitle?> (Search Results for <font color='red'>"+filter+"</font>)");
  } else {
    $("#Category").html("All Recommended Applications");
  }
  
  $("#sortButtons,#MainCategory,#topLevelButton,#sortIcon").show();
  $("#NetworkCategory,#MediaAppCategory,#MediaServerCategory,#NONE,#ToolsCategory").hide();

  $("#convert").val("");

  if ( !filter ) {
    getContent(true,'INITIALIZE','None Selected');
    return;
  }
  var sortOrder = getSortOrder();

  myAlert("Searching...", "Searching for <strong><font color=red>"+filter+"</font></strong>","/plugins/community.applications/images/spinner2.gif","40x40");
   
  $.post(URL,{action:'get_content',filter:filter,sortOrder:sortOrder,windowWidth:windowWidth,maxPerPage:maxPerPage},function(data) {
    if (data) { 
      $('#templates_content').html(data);
      $("#sortorder").attr("data-section","AppStore");
      $("#currentSection").html("Available Apps");
      readMore();
      myCloseAlert();
      setToolTip();
    }
    readMore();

    if ( "<?=$cfg['dockerSearch']?>" == "yes" ) {
      $('.dockerSearch').show();
    }
  });
}

function dismissWarning() {
  $("#appWarning").hide();
  $.post(URL,{action:'dismiss_warning'});
}

function forceUpdate() {
  $("#updateButton").prop("disabled",true);
  $("#Category").html("");
  $("#updateTime").html("In Progress...");
  $("#Total").html("Updating...");
  clearSearchBox();
  $.post(URL,{action:'force_update'},function(){getContent(true,'INITIALIZE','None Selected');});
  $(".appButtons").prop("disabled",false);
}

function forceUpdateButton() {
  var mode = $('#updateButton').val();
  if ( mode == 'appFeed Mode' ) {
    $.post(URL,{action:'force_update_button'});
    myAlert("Updating Content","Retrieving the latest application Lists","/plugins/community.applications/images/spinner2.gif","40x40");
    forceUpdate();
  } else {
    swal({
      title: "Switch To Legacy Mode?",
      text: "<strong>This will force CA to manually download the application XML's.  Normally there is no reason to do this as CA automatically downloads the latest application list whenever it starts up (updated every two hours)</strong><br><br><font color='red'>This process once begun cannot be aborted and will take 2-3 minutes</font>",
      type: "warning",
      confirmButtonColor: "#DD6B55",
      confirmButtonText: "Update Lists",
      showCancelButton: true,
      showConfirmButton: true,
      closeOnConfirm: false,
      allowOutsideClick: true,
      showLoaderOnConfirm: true,
      html: true
    },
    function(isConfirm) {
      if (isConfirm) {
        $.post(URL,{action:'force_update_button'});
        swal("Updating Applications","This will take a few minutes","info");
        forceUpdate();
      }
    });
  }
}

function enableButtons() {
  $('.allButtons').prop('disabled', false);
}

function changeDockerView(viewButton) {
  $("#"+viewButton).prop("disabled",true);

  var sortOrder = getSortOrder();

  totalDisplayed = $("#Total").html();
  $("#Total").html("Rendering");
  $.post(URL,{action:'change_docker_view',sortOrder:sortOrder},function(data) {
    if (data) {
      $('#templates_content').html(data);
      $("#Total").html(totalDisplayed);
      readMore();
    }
  });
}

function changeSortOrder(button,buttonClass,previousApps) {
  var windowWidth = getWindowWidth();
  var pageNumber = $("#currentPageNumber").html();
  var maxPerPage = getPerPage();
  
  if ( previousApps != "true" )
  {
    $("."+buttonClass).prop("disabled", false);
    $("#"+button).prop("disabled", true);
  }

  if ( button == "Date" || button == "Downloads" ) {
    $("#Down").prop("disabled", true);
    $("#Up").prop("disabled", false);
  }

  var sortOrder = getSortOrder();
  if ( $("#sortorder").attr("data-docker") ) {
    changeDockerView(button);
  } else {
    $("#Total").html("Rendering... <img src='/plugins/community.applications/images/spinner2.gif' style='height:30px;width:30px'>");

    $.post(URL,{action:'display_content',sortOrder:sortOrder,windowWidth:windowWidth,pageNumber:pageNumber,maxPerPage:maxPerPage},function(data3) {
      if (data3) {
        $('#templates_content').html(data3);
        readMore();
        setToolTip();
      }
    });
  }
}

function getPerPage() {
  return $("#maxPerPage").val();
}

function getSortOrder() {
  var sortOrder = new Object();
  var jsonOrder = new Object();

  if ( $("#viewIcon").prop("disabled") )       { sortOrder.viewMode = ["viewMode","icon"];             jsonOrder.viewMode = "#viewIcon"; }
  if ( $("#viewTable").prop("disabled") )      { sortOrder.viewMode = ["viewMode","table"];            jsonOrder.viewMode = "#viewTable"; }
  if ( $("#viewDetail").prop("disabled") )     { sortOrder.viewMode = ["viewMode","detail"];           jsonOrder.viewMode = "#viewDetail"; }

  if ( $("#Name").prop("disabled") )           { sortOrder.sortBy = ["sortBy","Name"];                 jsonOrder.sortBy = "#Name"; }
  if ( $("#RepoName").prop("disabled") )       { sortOrder.sortBy = ["sortBy","RepoName"];             jsonOrder.sortBy = "#RepoName"; }
  if ( $("#Author").prop("disabled") )         { sortOrder.sortBy = ["sortBy","SortAuthor"];           jsonOrder.sortBy = "#Author"; }
  if ( $("#Date").prop("disabled") )           { sortOrder.sortBy = ["sortBy","Date"];                 jsonOrder.sortBy = "#Date"; }
  if ( $("#Downloads").prop("disabled") )      { sortOrder.sortBy = ["sortBy","downloads"];            jsonOrder.sortBy = "#Downloads"; }

  if ( $("#Up").prop("disabled") )             { sortOrder.sortDir = ["sortDir","Up"];                 jsonOrder.sortDir = "#Up"; }
  if ( $("#Down").prop("disabled") )           { sortOrder.sortDir = ["sortDir","Down"];               jsonOrder.sortDir = "#Down"; }
  
  if ( $("#resourceName").prop("disabled") )   { sortOrder.resourceKey = ["resourceKey","Name"];       jsonOrder.resourceBy = "#resourceName"; }
  if ( $("#resourceCPU").prop("disabled") )    { sortOrder.resourceKey = ["resourceKey","CPU"];        jsonOrder.resourceBy = "#resourceCPU"; }
  if ( $("#resourceMemory").prop("disabled") ) { sortOrder.resourceKey = ["resourceKey","MemPercent"]; jsonOrder.resourceBy = "#resourceMemory"; }
  
  if ( $("#resourceUp").prop("disabled") )     { sortOrder.resourceDir = ["resourceDir","Up"];         jsonOrder.resourceDir = "#resourceUp"; }
  if ( $("#resourceDown").prop("disabled") )   { sortOrder.resourceDir = ["resourceDir","Down"];       jsonOrder.resourceDir = "#resourceDown"; }
  $("#sortorder").attr("data-sortorder",JSON.stringify(jsonOrder));
  var sort = [sortOrder.viewMode,sortOrder.sortBy,sortOrder.sortDir,sortOrder.resourceKey,sortOrder.resourceDir];
  return sort;
}

// needed for tooltipster
function setSortOrder() {
  var sortOrder = JSON.parse($("#sortorder").attr("data-sortorder"));
  $(".viewButton,.sortButton,.dirButton,.resourceSort,.resourceDir").prop("disabled",false);
  $(sortOrder.viewMode).prop("disabled",true);
  $(sortOrder.sortBy).prop("disabled",true);
  $(sortOrder.sortDir).prop("disabled",true);
  $(sortOrder.resourceBy).prop("disabled",true);
  $(sortOrder.resourceDir).prop("disabled",true);
}

function getContent(init,category,description,newApp) {
  if ( init == true ) {
    $("#sortIcon").hide();
  } else {
    $("#sortIcon").show();
  }
  $("#Total1").show();
  $("#sortButtons,#templateSortButtons").show();
  $("#templateSortButtons").show();
  var windowWidth = getWindowWidth();
  $("#maxPerPage").prop("disabled",false);

<?if ( $toolTipsterAllowed == "false" ) : ?>
  switch (category) {
    case 'network:':
      $("#MainCategory,#topLevelButton").hide();
      $("#NetworkCategory,#NONE").show();
      $("#network").prop("disabled",true);
      break;
    case 'MediaApp:':
      $("#MainCategory,#topLevelButton").hide();
      $("#MediaAppCategory,#NONE").show();
      $("#MediaApp").prop("disabled",true);
      break;
    case 'MediaServer:':
      $("#MainCategory,#topLevelButton").hide();
      $("#MediaServerCategory,#NONE").show();
      $("#MediaServer").prop("disabled",true);
      break;
    case 'tools:':
      $("#MainCategory,#topLevelButton").hide();
      $("#ToolsCategory,#NONE").show();
      $("#tools").prop("disabled",true);
      break;
    case '':
      $("#All").prop("disabled",true);
      $("#NetworkCategory,#MediaServerCategory,#MediaAppCategory,#NONE,#ToolsCategory").hide();
      $("#MainCategory,#topLevelButton,#New").show();
      break;
    case 'NONE':
      $("#NetworkCategory,#MediaServerCategory,#MediaAppCategory,#NONE,#ToolsCategory").hide();
      $("#MainCategory,#topLevelButton").show();
      break;
  }
<?endif;?>
  
  $('#BackToTop').hide();
  
  if ( category != "NONE" ) {
    if ( category == "INITIALIZE" ) {
      category = "NONE";
      var initialize = true;
      enableButtons();
      $("#All").prop("disabled",true);
      $("#NetworkCategory,#MediaServerCategory,#MediaAppCategory,#NONE,#ToolsCategory,#Total1").hide();
      $("#MainCategory,#topLevelButton,#New").show();
      $(".allButtons").prop("disabled",false);
    }
    $("#Total").html("Searching...  <img src='/plugins/community.applications/images/spinner2.gif' style='height:30px;width:30px'>");

    if ( category == "New" ) { category = ""; }
    if ( category == "All" ) { category = ""; }

    var sortOrder = getSortOrder();
    var maxPerPage = getPerPage();

    $.post(URL,{action:'get_content',category:category,newApp:newApp,sortOrder:sortOrder,windowWidth:windowWidth,maxPerPage:maxPerPage},function(data) {
      if (data) {
        $('#templates_content').html(data);
        readMore();
        myCloseAlert();
        setToolTip();
      }
      description = "<?=$categoryTitle?>: <font color='red'>"+description+"</font>";
      $("#Category").html(description);
      $("#updateButton").prop("disabled",false);
    });
  }
  $('#BackToTop').show();
  $('.dockerSearch').hide();
  setSortOrder();
}

function mySearch(filter) {
<!-- remove any html tags from the filter -->
  filter = filter.replace(/<(?:.|\n)*?>/gm, '');
  $('#searchBox').val(filter);

  if ( $("#searchButton").hasClass('fa-search') ) {
    $('#searchButton').toggleClass('fa-search fa-remove');
  }
  initDockerSearch(1);
}

function initDockerSearch() {
  $("#maxPerPage").prop("disabled",true);
  dockerSearch(1);
  $("#sortOrder").attr("data-docker","searching docker");
}

function dockerSearch(pageNumber) {
  var filter = $('#searchBox').val();  
  var dockerURL = "https://registry.hub.docker.com/search?q=" + filter;
  $("#sortorder").attr("data-docker","searching docker");
  $(".appButtons").prop("disabled",false);
  $("#AppStore").prop("disabled",true);
  $("#AppsOnly,#New,#UNCATEGORIZED,#All,#sortButtons,#sortIcon").show();
  $(".dockerSearch,#templateSortButtons").hide();
  $("#Total").html("Searching... <img src='/plugins/community.applications/images/spinner2.gif' style='height:30px;width:30px'>");
  $("#Category").html("DockerHub Search Results For <font color='red'>"+filter+"</font> <span id='pageNumber'></span>");
  var sortOrder = getSortOrder();
  myAlert("Searching dockerHub", "Retrieving <strong><font color=red>"+filter+"</font></strong> page <strong><font color=red>"+pageNumber+"</font></strong>","/plugins/community.applications/images/spinner2.gif","40x40");
  $.post(URL,{action:'search_dockerhub',filter:filter,page:pageNumber,sortOrder:sortOrder},function(data) {
    if (data) {
      $('#templates_content').html(data);
      readMore();
      myCloseAlert();
    }
  });
}

function authorSearch(author) {
  author = author.replace(/<(?:.|\n)*?>/gm, ''); 
  $('#searchBox').val(author);

  if ( $("#searchButton").hasClass('fa-search') ) {
    $('#searchButton').toggleClass('fa-search fa-remove');
  }
  doSearch();
}

function dockerConvert(dockerID) {
  myAlert("Converting Dockerfile","","/plugins/community.applications/images/spinner2.gif","40x40");

  totalDisplayed = $("#Total").html();
  $("#Total").html("Converting...");
  $.post(URL,{action:'convert_docker',ID:dockerID},function(data) {
    if (data) {
      myCloseAlert();
      templateURL = "AddContainer?xmlTemplate=default:" + data.trim();
      window.open(templateURL,"<?=$tabMode?>");
      $("#Total").html(totalDisplayed);
    }
  });
}

function clearSearchBox() {
  $("#searchBox").val("");
  if ($('#searchButton').hasClass('fa-remove')) {
    $('#searchButton').toggleClass('fa-remove fa-search'); $('.help1,#openclose').show(); 
  }
}

function installPlugin(pluginURL) {
  openBox('/plugins/dynamix.plugin.manager/scripts/plugin&arg1=install&arg2='+pluginURL,'Install Plugin',600,900,true);
}

function previousApps(button,installed) {
  $("#categoryIcon").hide();
  if ( installed ) {
    $("#currentSection").html("Installed Apps");
  } else {
    $("#currentSection").html("Previously Installed Apps");
  }
  $("#sortorder").attr("data-docker","");
  clearTimeout(monitorInterval);  
  clearSearchBox();
  $(".appButtons,#monitor,#maxPerPage").prop("disabled",false);
  $("#"+button).prop("disabled",true);
  $("#sortorder").attr("data-section",button);

  $("#Total").html("Searching... <img src='/plugins/community.applications/images/spinner2.gif' style='height:30px;width:30px'>");
  $("#templates_content,.resourceMonitor,.dockerSearch,#AppsOnly").hide();
  $("#templates_content").html("<center><font size='3'>Searching</font></center>");
  $("#templates_content,#sortButtons,#Total1,#templateSortButtons,#sortIcon").show();

  if ( button == "OldApps" ) {
    $("#Category").html("All Previously Installed Applications");
  } else {
    $("#Category").html("All Installed Applications");
  }

  $.post(URL,{action:'previous_apps',installed:installed},function(data) {
    if (data) {
      changeSortOrder(null,null,"true");
    }
  });
}

function removeApp(application, humanName) {
  swal({
    title: "Delete Template?",
    text: "Are you sure you want to delete <font color='red'><strong><em>"+humanName+"</em></strong></font> from the list of previously installed applications?",
    type: "warning",
    confirmButtonColor: "#DD6B55",
    confirmButtonText: "Yes, delete it!",
    showCancelButton: true,
    showConfirmButton: true,
    html: true
  },
  function(isConfirm) {
    if (isConfirm) {
      $.post(URL,{action:'remove_application',application:application}, function(data) {
        if (data) {
          previousApps("OldApps",false);
        }
      });
    }
   });
}

function uninstallApp(application,humanName) {
  if ( humanName == "Community Applications" || humanName == "CA Resource Monitor" ) {
    myAlert("AE-35 Error","<b><font color='red'>"+humanName+"</font></b> cannot be uninstalled this way.  You must go to the plugins tab and remove Community Applications from there.  <em><font color='purple'>But, why would you ever want to uninstall CA?</font></em>",null,null,true,false,true,"error");
  } else {
    swal({
      title: "Uninstall Application?",
      text: "Are you sure you want to uninstall <font color='red'><strong><em>"+humanName+"</em></strong></font>?",
      type: "warning",
      showCancelButton: true,
      showConfirmButton: true,
      confirmButtonColor: "#DD6B55",
      confirmButtonText: "Yes, uninstall it!",
      closeOnConfirm: false,
      showLoaderOnConfirm: true,
      html: true
    },
    function() {
      swal("Uninstalling "+humanName,"","info");
        $.post(URL,{action:'uninstall_application',application:application}, function(data) {
          if (data) {
            swal("","Uninstalled","success");
            previousApps("InstalledApps",true);
          }
        });
    });  
  }
}

function myTrim(x) {
    return x.replace(/^\s+|\s+$/gm,'');
}

function uninstallDocker(application,humanName) {
  swal({
    title: "Uninstall Application?",
    text: "Are you sure you want to uninstall <font color='red'><strong><em>"+humanName+"</em></strong></font>?",
    type: "warning",
    showCancelButton: true,
    showConfirmButton: true,
    confirmButtonColor: "#DD6B55",
    confirmButtonText: "Yes, uninstall it!",
    closeOnConfirm: false,
    showLoaderOnConfirm: true,
    html: true
  },
  function() {
    swal("Uninstalling","","info");
    $.post(URL,{action:'uninstall_docker',application:application},function(data) {
      if (data) {
        var appdata = myTrim(data);
        if ( appdata == "***" ) {
          myCloseAlert();
        } else {
          swal({
            title: "Uninstall Appdata?",
            text: "Permanently Delete <strong><font color='red'>"+appdata+"</font></strong>?.  This will <font color='red'>permanently</font> delete all files within "+appdata,
            showCancelButton: true,
            showConfirmButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it",
            closeOnConfirm: false,
            type: "warning",
            html: true
          },
          function() {
            swal({
              title: "",
              text: "Deleting <font color='red'>"+appdata+"</font>.  Depending upon the size, this may take awhile.  A notification will be sent when completed.",
              showConfirmButton: true,
              type: "success",
              html: true
            });
            $.post(URL,{action:'remove_appdata',appdata:appdata});
          });
        }
      } else {
        swal({
          title: "Uninstalled",
          text: "Could not accurately determine AppData folder"
        });
      }      
      previousApps("InstalledApps",true);
    });
  });
}

function appStore() {
  $("#categoryIcon").show();
  $("#currentSection").html("Available Apps");
  $("#sortorder").attr("data-section","AppStore");
  clearTimeout(monitorInterval);
  $("#templates_content").html("");
  $("#monitor,.appButtons,.allButtons").prop("disabled",false);
  $("#AppStore").prop("disabled",true);
  $(".resourceMonitor,#NetworkCategory,#MediaAppCategory,#MediaServerCategory,#ToolsCategory,#NONE").hide();
  $("#AppsOnly,#templates_content,#MainCategory,#topLevelButton,#topLevelButton").show();
  getContent(true,'INITIALIZE','None Selected');
  $('#searchBox').keyup(function(e) {if(e.which == 13){doSearch(false);}});
  $("#Category").html("None Selected");
  $("#sortorder").attr("data-docker","");
}

function Monitor() {
  $("#currentSection").html("Resource Monitor");
  clearSearchBox();
  $(".appButtons").prop("disabled",false);
  $("#monitor").prop("disabled",true);  
  $("#templates_content,.dockerSearch,#AppsOnly,#sortButtons,#Total1,#categoryIcon").hide();
  $("#sortorder").attr("data-main_category","MainCategory");
  $("#sortorder").attr("data-section","");
  $("#templates_content").html("");
  $(".resourceMonitor,#sortIcon").show();
  $("#sortorder").attr("data-resource","resource running");
  $("#resourceBody").html("<center>Initializing</center>");
  $.post(URL,{action:'resourceInitialize'}, function(data) {
    if (data) {
      $("#Category").html("Docker Application Resource Monitor <font size='0'>For more detailed results, click "+data+"</font>");
      runMonitor();
    }
  });
}

function runMonitor() {
  if ( $('#monitor').prop("disabled") ) {
    $.post(URL,{action:'checkCalculations'},function(result) {
      if (result) {
        $("#miscScript").html(result);
      }
    });
    var sortOrder = getSortOrder();
    $.post(URL,{action:'resourceMonitor',sortOrder:sortOrder},function(data) {
      if (data) {
        $('#resourceBody').html(data);
        monitorInterval = setTimeout(runMonitor,300);
      }
    });
  }
}

function changeResource(button,buttonclass) {
  $("."+buttonclass).prop("disabled",false);
  $("#"+button).prop("disabled",true);
  getSortOrder();
}

function calculateAppdataSize() {
  $("#calculateAppdata").prop("disabled",true);
  $.post(URL,{action:'calculateAppdata'});
}

function installPLGupdate(filename,plgName) {
  openBox('/plugins/community.applications/scripts/updatePLG.sh&arg1='+filename,'Update '+plgName,600,900,true);
}

function startCadvisor() {
  myAlert("","Starting the cAdvisor application");
  $.post(URL,{action:'startCadvisor'},function(data) {
    if (data) {
      myCloseAlert();
      Monitor();
    }  
  });
}

function pinApp(button,repository) {
  if ($(button).attr("src") == "/plugins/community.applications/images/greenButton.png" ) {
    $(button).attr("src","/plugins/community.applications/images/redButton.png");
    $(button).attr("title","Click to pin this application");
  } else {
    $(button).attr("src","/plugins/community.applications/images/greenButton.png");
    $(button).attr("title","Click to unpin this application");
  }
  if ( "<?=$toolTipsterAllowed?>" == "true" ) {
    $(button).tooltipster('content',$(button).attr("title"));
    $(button).attr("title","");
  }
  $.post(URL,{action:'pinApp',repository:repository});
}

function pinnedApps(button) {
  $("#categoryIcon").hide();
  $("#currentSection").html("Pinned Apps");
  $("#sortorder").attr("data-docker","");
  $("#maxPerPage").prop("disabled",false);
  $(".appButtons,#monitor").prop("disabled",false);
  $("#"+button).prop("disabled",true);
  $("#sortorder").attr("data-section",button);
  clearTimeout(monitorInterval);  
  clearSearchBox();
  $("#templates_content,.resourceMonitor,.dockerSearch,#AppsOnly").hide();
  $("#templates_content").html("<center><font size='3'>Searching</font></center>");
  $("#templates_content,#sortButtons,#Total1,#templateSortButtons,#sortIcon").show();
  $("#Category").html("All Pinned Applications");
  $.post(URL,{action:'pinnedApps'},function(data) {
    if (data) {
      changeSortOrder(null,null,null);
    }
  });
}

function displayTags(leadTemplate) {
  $.post(URL,{action:'displayTags',leadTemplate:leadTemplate},function(data) {
    if (data) {
      swal({
        title: "Choose A Branch To Install",
        text: data,
        html: true,
        type: "warning",
        showCancelButton: true,
        showConfirmButton: false,
        allowOutsideClick: true
      });
    }
  });
}
</script>
<FORM method="get" id="myForm">
> For help with this plugin, click here (a new tab will open with the help file)  <strong><font size="2"><a href="Settings/caHelp" target="_blank">HELP</a></font></strong>
<?if ($toolTipsterAllowed == "true"):?>
> <br><font color='red'>NOTE:</font> Some mobile devices may have problems with the CA's new UI.  If you find that you are unable to click to change the view modes, sort order, or select categories, then within CA's General Settings (Settings Tab), disable the updated UI
<?endif;?>

<?if ( $toolTipsterAllowed == "true" ) : ?>
<img id='categoryIcon' class='ca_categories' title='Select Category' height='50px' style='cursor:pointer;position:relative;' src='/plugins/community.applications/images/category.png'>
<img id='sortIcon' class='ca_toolsView' title='change view' height='50px' style='cursor:pointer;position:relative;' src='/plugins/community.applications/images/view.png'>
<img src='/plugins/community.applications/images/section.png' height='50px' class='ca_section' style='cursor:pointer;'><font size='2'><b>Current Section: <font color='red'><span id='currentSection'>Available Apps</span></font></b></font>
<?else:?>
<input type='button' class='appButtons' id='AppStore' value='Available Apps' disabled onclick='appStore();'>
<input type='button' class='appButtons' id='InstalledApps' value='Installed Apps' onclick='previousApps(this.id,true);'></input>
<input type='button' class='appButtons' id='OldApps' value='Previous Apps' onclick='previousApps(this.id,false);'></input>
<input type='button' class='appButtons' id='PinnedApps' value='Pinned Apps' onclick='pinnedApps(this.id);'></input>
<?endif;?>
<img class='ca_staticTips' height='35px' src='/plugins/community.applications/images/resource.png' id='monitor' title='Resource Monitor' style='margin:0px;cursor:pointer;float:right;'><br>
<?if ($toolTipsterAllowed == "false" ) : ?>
<span id='AppsOnly'>
<br><font size='4'><b>Categories:</b></font><br>
<span id='MainCategory'>
<input class='allButtons' type=button id='backup' value='Backup'></input>
<input class='allButtons' type=button id='cloud' value='Cloud'></input>
<input class='allButtons' type=button id='downloaders' value='Downloaders'></input>
<input class='allButtons' type=button id='HomeAutomation' value='Home Automation'></input>
<input class='allButtons' type=button id='networkALL' value='Network Services'></input>
<input class='allButtons' type=button id='mediaappALL' value='Media Applications'></input>
<input class='allButtons' type=button id='mediaserverALL' value='Media Servers'></input>
<input class='allButtons' type=button id='productivity' value='Productivity'></input>
<input class='allButtons' type=button id='toolsALL' value='Tools/Utilities'></input>
<input class='allButtons' type=button id='other' value='Other'></input>
<input class='allButtons' type=button id='Plugins' value='Plugins'></input>
</span>
<span id='NetworkCategory' hidden>
<input class='allButtons' type=button id='networkweb' value='Web Servers'></input>
<input class='allButtons' type=button id='networkdns' value='DNS Clients / Servers'></input>
<input class='allButtons' type=button id='networkftp' value='FTP Clients / Servers'></input>
<input class='allButtons' type=button id='networkproxy' value='Proxies'></input>
<input class='allButtons' type=button id='networkvoip' value='VOIP'></input>
<input class='allButtons' type=button id='networkmanagement' value='Management / Analyzer'></input>
<input class='allButtons' type=button id='networkmessenger' value='Messengers'></input>
<input class='allButtons' type=button id='networkother' value='Other'></input>
<input class='allButtons' type=button id='network' value='All Network Services'></input>
</span>
<span id='MediaAppCategory' hidden>
<input class='allButtons' type=button id='MediaAppVideo' value='Video'></input>
<input class='allButtons' type=button id='MediaAppMusic' value='Music'></input>
<input class='allButtons' type=button id='MediaAppBooks' value='Books / Comics'></input>
<input class='allButtons' type=button id='MediaAppPhotos' value='Photos'></input>
<input class='allButtons' type=button id='MediaAppOther' value='Other'></input>
<input class='allButtons' type=button id='MediaApp' value='All Media Applications'></input>
</span>
<span id='MediaServerCategory' hidden>
<input class='allButtons' type=button id='MediaServerVideo' value='Video'></input>
<input class='allButtons' type=button id='MediaServerMusic' value='Music'></input>
<input class='allButtons' type=button id='MediaServerBooks' value='Books / Comics'></input>
<input class='allButtons' type=button id='MediaServerPhotos' value='Photos'></input>
<input class='allButtons' type=button id='MediaServerOther' value='Other'></input>
<input class='allButtons' type=button id='MediaServer' value='All Media Server'></input>
</span>
<span id='ToolsCategory' hidden>
<input class='allButtons' type=button id='toolssystem' value='System Tools'></input>
<input class='allButtons' type=button id='tools' value='All Tools/Utilities'></input>
</span>
<span style='float:right'>
<input class='allButtons' type=button id="NONE" value='All Categories' hidden></input>
<span id='topLevelButton'>
<input class='allButtons' type=button id="New" value='New/Updated'></input>
<input class='allButtons' type=button id="UNCATEGORIZED" value='Uncategorized'></input>
<input class='allButtons' type=button id="All" value='All Apps'></input>
</span>
<?endif;?>
<strong><font size='3'><span id="Category"></span></strong></font><span id="Total1" style='float: right';>Total Found: <strong><font size="3"><span id="Total"></span></font></strong><span>&nbsp;&nbsp;Results/page: <select id='maxPerPage' class='narrow' onchange='changePage(&quot;1&quot;);'><option value='-1'>All</option><option value='10'>10</option><option value='25'>25</option><option value='50'>50</option><option value='100'>100</option></select></span></span>
</span><br>
<?if ( $toolTipsterAllowed == "false" ) : ?>
<center>
<span id='sortButtons'>View Mode:
<input type='button' class='viewButton' value='Tables' id='viewTable'>
<input type='button' class='viewButton' value='Icon Details' id='viewDetail'>
<input type='button' class='viewButton' value='Icons' id='viewIcon'>
<span id='templateSortButtons'>Sort By:
<input type='button' class='sortButton' id='Name' value='Name' disabled>
<input type='button' class='sortButton' id='RepoName' value='Repository'>
<input type='button' class='sortButton' id='Downloads' value='Downloads'>
<input type='button' class='sortButton' id='Author' value='Author'>
<input type='button' class='sortButton' id='Date' value='Date'>
Sort Direction:
<input type='button' class='dirButton' id='Up' value='Ascending' disabled>
<input type='button' class='dirButton' id='Down' value='Descending'>
</center></span></span>
<?endif;?>

<?if ( $upgradeAvailable ) :?>
<span id='upgradeAvailable'><center> <font color='red'>An update to Community Applications is Available. Click <a onclick=installPLGupdate('community.applications.plg',"CommunityApplications"); style=cursor:pointer>HERE</a> to install the update  <img src='/plugins/community.applications/images/information.png' onclick='showInfo("CA","Community Applications");' style='cursor:pointer'></center></font></span>
<?endif?>
<div class='dockerSearch' style='display:none'><center><input type=button class='initDockerSearch' value='Get more results from dockerHub'></input></center></div>

<span id='templates_content'></span>

<?if ( $toolTipsterAllowed == "false" ) : ?>
<div class='resourceMonitor' hidden>
<center>Sort By:
<input type='button' value='Name' id='resourceName' class='resourceSort' disabled>
<input type='button' value='CPU' id='resourceCPU' class='resourceSort'>
<input type='button' value='Memory' id='resourceMemory' class='resourceSort'>
Sort Direction:
<input type='button' value='Up' id='resourceUp' class='resourceDir' disabled>
<input type='button' value='Down' id='resourceDown' class='resourceDir'>
<input type='button' value='Calculate Appdata Size' id='calculateAppdata'>
<br><br><table id='resourceHeader' class='tablesorter'>
<thead><th></th><th>AppName</th><th>DockerHub Repository</th><th>CPU %</th><th>Memory (Used/Max)</th><th>Memory %</th><th>Network (Down/Up)</th><th>Virtual Size</th><th><center>Appdata</center></th></thead>
<tbody id='resourceBody'></tbody>
</table>
</div>
<?else:?>
<div class='resourceMonitor' hidden><input type='button' value='Calculate Appdata Size' id='calculateAppdata' style='float:right'>
<br><br><table id='resourceHeader' class='tablesorter'>
<thead><th></th><th>AppName</th><th>DockerHub Repository</th><th>CPU %</th><th>Memory (Used/Max)</th><th>Memory %</th><th>Network (Down/Up)</th><th>Virtual Size</th><th><center>Appdata</center></th></thead>
<tbody id='resourceBody'></tbody>
</table>
</div>
<?endif;?>
<div id='appWarning' style='display:none'><center><img src='https://raw.githubusercontent.com/Squidly271/community.applications/master/webImages/Warning2.png' height='50px' width='50px'><br>
<font size='2' color='red'>Note: All Applications listed here are 3rd party additions to unRaid.<br>Neither the authors of Community Applications nor Limetech make any warranty as to the suitability of any applications listed herein</font>
<br><input type='button' value='Dismiss Warning' onclick='dismissWarning();'></input></center></div>
</center>
<a href="#" class="back-to-top" style="display: inline;"><img src='/plugins/community.applications/images/up.png' style='width:30px;height:30px' href="#" class="back-to-top"></img></a>
<div class='dockerSearch' style='display:none'><center><input type=button class='initDockerSearch' value='Get more results from dockerHub'></input></center></div>
<center>Last Change To Appfeed: <strong><span id='updateTime'></span></strong></center>
<a href="Settings/caHelp" target='_blank'>CA Manual</a><a class='ca_credits' style='float:right;cursor:pointer' onclick='showCredits();'>Credits</a><br><br></span>
<center><a href='https://forums.lime-technology.com/topic/55246-docker-faq/' target='_blank'>Docker FAQ</a></center>
<center>Community Applications Version: <?=$installedVersion?></center>
> <center>For support for this plugin, visit here: <a title='click for help' href="http://lime-technology.com/forum/index.php?topic=40262.0" target="_blank">http://lime-technology.com/forum/index.php?topic=40262.0</a></center>
> <center><a href='https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=7M7CBCVU732XG' target='_blank'><img src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif"></a></center>

<span id='miscScript'></span>

<?if ( $toolTipsterAllowed == "true" ) : ?>
<div>
<span id='tooltipviews' style='display:none;'>
<span id='sortButtons'>View Mode:
<input type='button' class='viewButton' value='Tables' id='viewTable'>
<input type='button' class='viewButton' value='Icon Details' id='viewDetail'>
<input type='button' class='viewButton' value='Icons' id='viewIcon'>
<span id='templateSortButtons'>Sort By:
<input type='button' class='sortButton' id='Name' value='Name' disabled>
<input type='button' class='sortButton' id='RepoName' value='Repository'>
<input type='button' class='sortButton' id='Downloads' value='Downloads'>
<input type='button' class='sortButton' id='Author' value='Author'>
<input type='button' class='sortButton' id='Date' value='Date'>
Sort Direction:
<input type='button' class='dirButton' id='Up' value='Ascending' disabled>
<input type='button' class='dirButton' id='Down' value='Descending'>
</span></span>
<div class='resourceMonitor' style='display:none;'><center>Sort By:
<input type='button' value='Name' id='resourceName' class='resourceSort' disabled>
<input type='button' value='CPU' id='resourceCPU' class='resourceSort'>
<input type='button' value='Memory' id='resourceMemory' class='resourceSort'>
Sort Direction:
<input type='button' value='Up' id='resourceUp' class='resourceDir' disabled>
<input type='button' value='Down' id='resourceDown' class='resourceDir'>
</div>
</span></div>
<span id='sections' style='display:none;'>
<input type='button' class='appButtons' id='AppStore' value='Available Apps' disabled onclick='appStore();'>
<input type='button' class='appButtons' id='InstalledApps' value='Installed Apps' onclick='previousApps(this.id,true);'></input>
<input type='button' class='appButtons' id='OldApps' value='Previous Apps' onclick='previousApps(this.id,false);'></input>
<input type='button' class='appButtons' id='PinnedApps' value='Pinned Apps' onclick='pinnedApps(this.id);'></input>
<input type='button' class='appButtons' id='CAmodules' value='CA Modules' onclick='caModules();'>
</span>
<div style='display:none;'>
<span id='MainCategory'>
<input class='allButtons' type=button id='backup' value='Backup'></input>
<input class='allButtons' type=button id='cloud' value='Cloud'></input>
<input class='allButtons' type=button id='downloaders' value='Downloaders'></input>
<input class='allButtons' type=button id='HomeAutomation' value='Home Automation'></input>
<input class='allButtons' type=button id='networkALL' value='Network Services'></input>
<input class='allButtons' type=button id='mediaappALL' value='Media Applications'></input>
<input class='allButtons' type=button id='mediaserverALL' value='Media Servers'></input>
<input class='allButtons' type=button id='productivity' value='Productivity'></input>
<input class='allButtons' type=button id='toolsALL' value='Tools/Utilities'></input>
<input class='allButtons' type=button id='other' value='Other'></input>
<input class='allButtons' type=button id='Plugins' value='Plugins'></input>
</span>
<span id='NetworkCategory'>
<input class='allButtons' type=button id='networkweb' value='Web Servers'></input>
<input class='allButtons' type=button id='networkdns' value='DNS Clients / Servers'></input>
<input class='allButtons' type=button id='networkftp' value='FTP Clients / Servers'></input>
<input class='allButtons' type=button id='networkproxy' value='Proxies'></input>
<input class='allButtons' type=button id='networkvoip' value='VOIP'></input>
<input class='allButtons' type=button id='networkmanagement' value='Management / Analyzer'></input>
<input class='allButtons' type=button id='networkmessenger' value='Messengers'></input>
<input class='allButtons' type=button id='networkother' value='Other'></input>
<input class='allButtons' type=button id='network' value='All Network Services'></input>
</span>
<span id='MediaAppCategory'>
<input class='allButtons' type=button id='MediaAppVideo' value='Video'></input>
<input class='allButtons' type=button id='MediaAppMusic' value='Music'></input>
<input class='allButtons' type=button id='MediaAppBooks' value='Books / Comics'></input>
<input class='allButtons' type=button id='MediaAppPhotos' value='Photos'></input>
<input class='allButtons' type=button id='MediaAppOther' value='Other'></input>
<input class='allButtons' type=button id='MediaApp' value='All Media Applications'></input>
</span>
<span id='MediaServerCategory'>
<input class='allButtons' type=button id='MediaServerVideo' value='Video'></input>
<input class='allButtons' type=button id='MediaServerMusic' value='Music'></input>
<input class='allButtons' type=button id='MediaServerBooks' value='Books / Comics'></input>
<input class='allButtons' type=button id='MediaServerPhotos' value='Photos'></input>
<input class='allButtons' type=button id='MediaServerOther' value='Other'></input>
<input class='allButtons' type=button id='MediaServer' value='All Media Server'></input>
</span>
<span id='ToolsCategory'>
<input class='allButtons' type=button id='toolssystem' value='System Tools'></input>
<input class='allButtons' type=button id='tools' value='All Tools/Utilities'></input>
</span>
<div id='otherButtons'>
<span style='float:right'>
<input class='allButtons' type=button id="NONE" value='All Categories' hidden></input>
<span id='topLevelButton'>
<input class='allButtons' type=button id="New" value='New/Updated'></input>
<input class='allButtons' type=button id="UNCATEGORIZED" value='Uncategorized'></input>
<input class='allButtons' type=button id="All" value='All Apps'></input>
</span>
</div>
</div>
<?endif;?>
</span>
<span id='sortorder' data-sortorder='' data-docker='' data-section='AppStore' data-main_category='MainCategory'></span>
</FORM>
<span id='debugging'></span>

